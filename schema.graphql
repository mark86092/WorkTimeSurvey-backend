type Archive {
  is_archived: Boolean!
  reason: String!
}

type AverageSalary {
  type: SalaryType!
  amount: Float!
}

input ChangeSalaryWorkTimeStatusInput {
  id: ID!
  status: PublishStatus!
}

type ChangeSalaryWorkTimeStatusPayload {
  salary_work_time: SalaryWorkTime!
}

type Company {
  name: String!

  """取得資料本身"""
  salary_work_times: [SalaryWorkTime!]!
  work_experiences(start: Int, limit: Int): [WorkExperience!]!
  interview_experiences(start: Int, limit: Int): [InterviewExperience!]!

  """取得統計資訊"""
  salary_work_time_statistics: SalaryWorkTimeStatistics!
  work_experience_statistics: WorkExperienceStatistics!
  interview_experience_statistics: InterviewExperienceStatistics!
}

input CompanyInput {
  id: String
  query: String!
}

input CreateInterviewExperienceInput {
  """Common"""
  company: CompanyInput!
  region: String!
  job_title: String!
  title: String!
  sections: [SectionInput!]!
  experience_in_year: Int
  education: String
  email: String

  """interview part"""
  interview_time: InterviewTimeInput!
  interview_result: String!
  interview_qas: [InterviewQuestionInput!] = []
  interview_sensitive_questions: [String!] = []
  salary: SalaryInput
  overall_rating: Int!
}

type CreateInterviewExperiencePayload {
  success: Boolean!
  experience: InterviewExperience!
}

input CreateWorkExperienceInput {
  """Common"""
  company: CompanyInput!
  region: String!
  job_title: String!
  title: String!
  sections: [SectionInput!]!
  experience_in_year: Int
  education: String
  email: String

  """work part"""
  salary: SalaryInput
  week_work_time: Int
  recommend_to_others: RecommendToOthersType
  is_currently_employed: IsCurrentEmployedType!

  """will have this column if 'is_currently_employed' === no"""
  job_ending_time: JobEndingTimeInput
}

type CreateWorkExperiencePayload {
  success: Boolean!
  experience: WorkExperience!
}

scalar Date

enum EmailStatus {
  UNVERIFIED
  SENT_VERIFICATION_LINK
  VERIFIED
}

enum EmploymentType {
  full_time
  part_time
  intern
  temporary
  contract
  dispatched_labor
}

interface Experience {
  id: ID!
  type: ExperienceType!
  company: Company!
  job_title: JobTitle!
  region: String!
  experience_in_year: Int
  education: String
  salary: Salary
  title: String
  sections: [Section!]!
  created_at: Date!
  reply_count: Int!
  report_count: Int!
  like_count: Int!
  status: PublishStatus!
  archive: Archive!

  """使用者是否按贊 (null 代表未傳入驗證資訊)"""
  liked: Boolean

  """preview，通常是列表時可以用來簡單預覽內容"""
  preview: String
}

enum ExperienceType {
  work
  interview
  intern
}

input FacebookLoginInput {
  accessToken: String!
}

enum Gender {
  female
  male
  other
}

input GoogleLoginInput {
  idToken: String!
}

type InternExperience implements Experience {
  id: ID!
  type: ExperienceType!
  company: Company!
  job_title: JobTitle!
  region: String!
  experience_in_year: Int
  education: String
  salary: Salary
  title: String
  sections: [Section!]!
  created_at: Date!
  reply_count: Int!
  report_count: Int!
  like_count: Int!
  status: PublishStatus!
  archive: Archive!

  """使用者是否按贊 (null 代表未傳入驗證資訊)"""
  liked: Boolean

  """preview，通常是列表時可以用來簡單預覽內容"""
  preview: String

  """intern experience specific fields"""
  starting_year: Int
  overall_rating: Float
}

type InterviewExperience implements Experience {
  id: ID!
  type: ExperienceType!
  company: Company!
  job_title: JobTitle!
  region: String!
  experience_in_year: Int
  education: String
  salary: Salary
  title: String
  sections: [Section!]!
  created_at: Date!
  reply_count: Int!
  report_count: Int!
  like_count: Int!
  status: PublishStatus!
  archive: Archive!

  """使用者是否按贊 (null 代表未傳入驗證資訊)"""
  liked: Boolean

  """preview，通常是列表時可以用來簡單預覽內容"""
  preview: String

  """interview experience specific fields"""
  interview_time: YearMonth!
  interview_result: String!
  overall_rating: Int!
  interview_qas: [InterviewQuestion!]
  interview_sensitive_questions: [String!]
}

type InterviewExperienceStatistics {
  count: Int!
  overall_rating: Float!
}

type InterviewQuestion {
  question: String!
  answer: String
}

input InterviewQuestionInput {
  question: String!
  answer: String
}

input InterviewTimeInput {
  year: Int!
  month: Int!
}

enum IsCurrentEmployedType {
  yes
  no
}

type JobAverageSalary {
  job_title: JobTitle!
  average_salary: AverageSalary!
  data_count: Int!
}

input JobEndingTimeInput {
  year: Int!
  month: Int!
}

type JobTitle {
  name: String!

  """取得資料本身"""
  salary_work_times: [SalaryWorkTime!]!
  work_experiences(start: Int, limit: Int): [WorkExperience!]!
  interview_experiences(start: Int, limit: Int): [InterviewExperience!]!

  """取得統計資訊"""
  salary_work_time_statistics: SalaryWorkTimeStatistics!
  work_experience_statistics: WorkExperienceStatistics!
  interview_experience_statistics: InterviewExperienceStatistics!

  """該職業的薪資分布"""
  salary_distribution: SalaryDistribution!
}

type LaborRight {
  id: ID!
  title: String!
  coverUrl: String
  order: Int
  description: String!
  content: String!
  seoTitle: String
  seoDescription: String
  seoText: String
  nPublicPages: Int
  descriptionInPermissionBlock: String
}

type LoginPayload {
  user: User!
  token: String!
}

type Mutation {
  placeholder: Boolean
  createInterviewExperience(input: CreateInterviewExperienceInput!): CreateInterviewExperiencePayload!
  createWorkExperience(input: CreateWorkExperienceInput!): CreateWorkExperiencePayload!
  changeSalaryWorkTimeStatus(input: ChangeSalaryWorkTimeStatusInput!): ChangeSalaryWorkTimeStatusPayload!

  """Login via facebook client side auth"""
  facebookLogin(input: FacebookLoginInput!): LoginPayload!

  """Login via google client side auth"""
  googleLogin(input: GoogleLoginInput!): LoginPayload!

  """發送驗證信"""
  sendVerifyEmail(input: SendVerifyEmailInput!): SendVerifyEmailPayload!

  """驗證信箱"""
  verifyEmail(input: VerifyEmailInput!): VerifyEmailPayload!
  viewSalaryWorkTimes(input: ViewSalaryWorkTimesInput!): ViewSalaryWorkTimesPayload!
  viewExperiences(input: ViewExperiencesInput!): ViewExperiencesPayload!
}

enum Order {
  DESCENDING
  ASCENDING
}

type OvertimeFrequencyCount {
  """對應到表單的「幾乎不」"""
  seldom: Int!

  """對應到表單的「偶爾」"""
  sometimes: Int!

  """對應到表單的「經常」"""
  usually: Int!

  """對應到表單的「幾乎每天」"""
  almost_everyday: Int!
}

"""發布狀態"""
enum PublishStatus {
  published
  hidden
}

type Query {
  placeholder: Boolean
  work_experience_count: Int!
  interview_experience_count: Int!
  company_keywords(limit: Int = 5): [String!]!
  search_companies(query: String!): [Company!]!
  company(name: String!): Company

  """列出所有有資料(薪資工時、職場經驗)的公司"""
  companies_having_data: [Company!]!

  """目前用途：取得薪資資料前 topN 多的公司，且至少有三種職稱各至少有三筆資料"""
  popular_companies(limit: Int = 5): [Company!]!

  """取得單篇經驗分享"""
  experience(id: ID!): Experience
  popular_experiences(
    """返回的資料筆數，須 <= 20"""
    returnNumber: Int = 3
    sampleNumber: Int = 20
  ): [Experience!]!
  job_title_keywords(limit: Int = 5): [String!]!
  search_job_titles(query: String!): [JobTitle!]!
  job_title(name: String!): JobTitle

  """列出所有有資料(薪資工時、職場經驗)的職稱"""
  job_titles_having_data: [JobTitle!]!

  """目前用途：取得薪資資料前 topN 多的職稱"""
  popular_job_titles(limit: Int = 5): [JobTitle!]!
  labor_rights: [LaborRight!]!
  labor_right(id: ID!): LaborRight
  me: User!

  """取得薪資工時列表 （未下關鍵字搜尋的情況），只有從最新排到最舊"""
  salary_work_times(start: Int!, limit: Int!): [SalaryWorkTime!]!

  """薪資工時總數"""
  salary_work_time_count: Int!
}

enum RecommendToOthersType {
  yes
  no
}

type Reply {
  id: ID!
  content: String!
  like_count: Int!
  report_count: Int!
  floor: Int!
  created_at: Date!

  """發布狀態"""
  status: PublishStatus!

  """封存資訊"""
  archive: Archive!

  """相對應的 experience (resolve if published)"""
  experience: Experience

  """使用者是否按贊 (null 代表未傳入驗證資訊)"""
  liked: Boolean
}

type Salary {
  type: SalaryType!
  amount: Int!
}

"""薪資分布"""
type SalaryDistribution {
  bins: [SalaryDistributionBin!]
}

"""薪資分布的一個 bin（範圍＋數量）"""
type SalaryDistributionBin {
  data_count: Int!
  range: SalaryRange!
}

input SalaryInput {
  type: SalaryType!
  amount: Int!
}

type SalaryRange {
  type: SalaryType!
  from: Int!
  to: Int!
}

enum SalaryType {
  year
  month
  day
  hour
}

type SalaryWorkTime {
  id: ID
  company: Company!
  job_title: JobTitle!
  day_promised_work_time: Float
  day_real_work_time: Float
  employment_type: EmploymentType
  experience_in_year: Int
  overtime_frequency: Int
  salary: Salary
  sector: String
  week_work_time: Float
  created_at: Date!
  data_time: YearMonth!
  estimated_hourly_wage: Float
  about_this_job: String

  """發布狀態"""
  status: PublishStatus!

  """封存資訊"""
  archive: Archive!
}

type SalaryWorkTimeStatistics {
  count: Int!
  average_week_work_time: Float
  average_estimated_hourly_wage: Float
  has_compensatory_dayoff_count: YesNoOrUnknownCount
  has_overtime_salary_count: YesNoOrUnknownCount
  is_overtime_salary_legal_count: YesNoOrUnknownCount
  overtime_frequency_count: OvertimeFrequencyCount

  """不同職業的平均薪資"""
  job_average_salaries: [JobAverageSalary!]!
}

enum SearchBy {
  COMPANY
  JOB_TITLE
}

type Section {
  subtitle: String
  content: String!
}

input SectionInput {
  subtitle: String
  content: String!
}

input SendVerifyEmailInput {
  """要驗證的使用者的信箱"""
  email: String!

  """驗證成功後，按鈕會導向的 URL"""
  redirect_url: String!
}

type SendVerifyEmailPayload {
  status: String!
}

enum SortBy {
  CREATED_AT
  WEEK_WORK_TIME
  ESTIMATED_HOURLY_WAGE
}

type User {
  _id: ID!
  name: String!
  facebook_id: String
  google_id: String
  email: String
  email_status: EmailStatus
  created_at: Date!

  """The user's experiences"""
  experiences(start: Int = 0, limit: Int = 20): [Experience!]!
  experience_count: Int!

  """The user's replies"""
  replies(start: Int = 0, limit: Int = 20): [Reply!]!
  reply_count: Int!

  """The user's salary_work_time"""
  salary_work_times: [SalaryWorkTime!]!
  salary_work_time_count: Int!
}

input VerifyEmailInput {
  token: String!
}

type VerifyEmailPayload {
  """登入用 token"""
  token: String!

  """驗證成功後，按鈕會導向的 URL，與 SendVerifyEmailInput 一致"""
  redirect_url: String!
}

input ViewExperiencesInput {
  content_ids: [String!]!
  referrer: String
}

type ViewExperiencesPayload {
  status: String!
}

input ViewSalaryWorkTimesInput {
  content_ids: [String!]!
  referrer: String
}

type ViewSalaryWorkTimesPayload {
  status: String!
}

type WorkExperience implements Experience {
  id: ID!
  type: ExperienceType!
  company: Company!
  job_title: JobTitle!
  region: String!
  experience_in_year: Int
  education: String
  salary: Salary
  title: String
  sections: [Section!]!
  created_at: Date!
  reply_count: Int!
  report_count: Int!
  like_count: Int!

  """發布狀態"""
  status: PublishStatus!

  """封存資訊"""
  archive: Archive!

  """使用者是否按贊 (null 代表未傳入驗證資訊)"""
  liked: Boolean

  """preview，通常是列表時可以用來簡單預覽內容"""
  preview: String

  """work experience specific fields"""
  data_time: YearMonth
  week_work_time: Float
  recommend_to_others: String
}

type WorkExperienceStatistics {
  count: Int!
  recommend_to_others: YesNoOrUnknownCount!
}

type YearMonth {
  year: Int!
  month: Int!
}

enum YesNoOrUnknown {
  yes
  no
  unknown
}

type YesNoOrUnknownCount {
  yes: Int!
  no: Int!
  unknown: Int!
}
